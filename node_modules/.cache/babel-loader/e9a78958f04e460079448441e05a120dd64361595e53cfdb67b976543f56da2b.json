{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"TODO LIST\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Add Item\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Todo\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  id: \"incomplete-tasks\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"edit\"\n}, \"Edit\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"delete\"\n}, \"Delete\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createStaticVNode(\"<h3>Completed</h3><ul id=\\\"completed-tasks\\\"><li><input type=\\\"checkbox\\\" checked><label>See the Doctor</label><input type=\\\"text\\\"><button class=\\\"edit\\\">Edit</button><button class=\\\"delete\\\">Delete</button></li></ul>\", 2);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"body\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTask = $event),\n    id: \"new-task\",\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newTask]]), _createTextVNode(_toDisplayString($setup.newTask.text), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.addNote\n  }, \"Add\")]), _hoisted_4, _createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tasks, task => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: task.id,\n      id: \"incomplete-tasks\"\n    }, [_createElementVNode(\"li\", null, [_hoisted_6, _createElementVNode(\"label\", null, _toDisplayString(task.text), 1 /* TEXT */), _hoisted_7, _hoisted_8, _hoisted_9])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_10])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$setup","newTask","$event","text","onClick","addNote","_hoisted_4","_hoisted_5","_Fragment","_renderList","tasks","task","key","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10"],"sources":["/Users/ram/projects/todo-assignment/notes-app/src/App.vue"],"sourcesContent":["\n<script setup>\nimport { ref } from \"vue\";\n\nconst newTask = ref(\"\");\nconst tasks = ref([]);\n// const editable = ref(false);\n\nconst addNote = () => {\n  tasks.value.push({\n    text: newTask.value,\n  });\n  newTask.value = \"\";\n};\n</script>\n\n\n<template>\n  <body>\n    <div class=\"container\">\n      <h2>TODO LIST</h2>\n      <h3>Add Item</h3>\n      <p>\n        <input v-model=\"newTask\" id=\"new-task\" type=\"text\" />{{ newTask.text\n        }}<button @click=\"addNote\">Add</button>\n      </p>\n\n      <h3>Todo</h3>\n      <ul id=\"incomplete-tasks\">\n        <ul v-for=\"task in tasks\" :key=\"task.id\" id=\"incomplete-tasks\">\n          <li>\n            <input type=\"checkbox\" />\n            <label>{{ task.text }}</label>\n            <input type=\"text\" />\n            <button class=\"edit\">Edit</button>\n            <button class=\"delete\">Delete</button>\n          </li>\n        </ul>\n      </ul>\n\n      <h3>Completed</h3>\n      <ul id=\"completed-tasks\">\n        <li>\n          <input type=\"checkbox\" checked /><label>See the Doctor</label\n          ><input type=\"text\" /><button class=\"edit\">Edit</button\n          ><button class=\"delete\">Delete</button>\n        </li>\n      </ul>\n    </div>\n  </body>\n</template>\n<style >\nbody {\n  background: #fff;\n  height: 100vh;\n  margin: 0;\n  color: #333;\n  font-family: Lato, sans-serif;\n  background-color: #e4e4e4;\n}\n\n.container {\n  display: block;\n  width: 400px;\n  margin: 100px auto auto auto;\n  background-color: #fff;\n  padding: 0px 10px 10px 10px;\n  border-radius: 10px;\n}\n\nh2 {\n  text-align: center;\n  padding-top: 10px;\n  margin-bottom: 0px;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n}\n\nli * {\n  float: left;\n}\n\nli,\nh3 {\n  clear: both;\n  list-style: none;\n}\n\ninput,\nbutton {\n  outline: none;\n}\n\nbutton {\n  background: none;\n  border: 0px;\n  color: #888;\n  font-size: 15px;\n  width: 60px;\n  margin: 10px 0 0;\n  font-family: Lato, sans-serif;\n  cursor: pointer;\n}\n\nbutton:hover {\n  color: #333;\n}\n\n/* Heading */\n\nh3,\nlabel[for=\"new-task\"] {\n  color: #333;\n  font-weight: 700;\n  font-size: 15px;\n  border-bottom: 2px solid #333;\n  padding: 20px 0 10px;\n  margin: 0;\n  text-transform: uppercase;\n}\n\ninput[type=\"text\"] {\n  margin: 0;\n  font-size: 18px;\n  line-height: 18px;\n  height: 18px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  background: #fff;\n  border-radius: 6px;\n  font-family: Lato, sans-serif;\n  color: #888;\n}\n\ninput[type=\"text\"]:focus {\n  color: #333;\n}\n\n/* New Task */\n\nlabel[for=\"new-task\"] {\n  display: block;\n  margin: 0 0 20px;\n}\n\ninput#new-task {\n  float: left;\n  width: 318px;\n}\n\np > button:hover {\n  color: #0fc57c;\n}\n\n/* Task list */\n\nli {\n  overflow: hidden;\n  padding: 20px 0;\n  border-bottom: 1px solid #eee;\n}\n\nli > input[type=\"checkbox\"] {\n  margin: 0 10px;\n  position: relative;\n  top: 15px;\n}\n\nli > label {\n  font-size: 18px;\n  line-height: 40px;\n  width: 237px;\n  padding: 0 0 0 11px;\n}\n\nli > input[type=\"text\"] {\n  width: 226px;\n  background-color: red;\n}\n\nli > .delete:hover {\n  color: #cf2323;\n}\n\n/* Completed */\n\n#completed-tasks label {\n  text-decoration: line-through;\n  color: #888;\n}\n\n/* Edit Task */\n\nul li input[type=\"text\"] {\n  display: none;\n}\n\nul li.editMode input[type=\"text\"] {\n  display: block;\n}\n\nul li.editMode label {\n  display: none;\n}\n</style>"],"mappings":";;EAmBSA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAkB,YAAd,WAAS;gCACbA,mBAAA,CAAiB,YAAb,UAAQ;gCAMZA,mBAAA,CAAa,YAAT,MAAI;;EACJC,EAAE,EAAC;AAAkB;gCAGnBD,mBAAA,CAAyB;EAAlBE,IAAI,EAAC;AAAU;gCAEtBF,mBAAA,CAAqB;EAAdE,IAAI,EAAC;AAAM;gCAClBF,mBAAA,CAAkC;EAA1BD,KAAK,EAAC;AAAM,GAAC,MAAI;gCACzBC,mBAAA,CAAsC;EAA9BD,KAAK,EAAC;AAAQ,GAAC,QAAM;;;uBAjBvCI,mBAAA,CA+BO,eA9BLH,mBAAA,CA6BM,OA7BNI,UA6BM,GA5BJC,UAAkB,EAClBC,UAAiB,EACjBN,mBAAA,CAGI,Y,gBAFFA,mBAAA,CAAqD;+DAArCO,MAAA,CAAAC,OAAO,GAAAC,MAAA;IAAER,EAAE,EAAC,UAAU;IAACC,IAAI,EAAC;iDAA5BK,MAAA,CAAAC,OAAO,E,qCAAiCD,MAAA,CAAAC,OAAO,CAACE,IAAI,kBAClEV,mBAAA,CAAqC;IAA5BW,OAAK,EAAEJ,MAAA,CAAAK;EAAO,GAAE,KAAG,E,GAGhCC,UAAa,EACbb,mBAAA,CAUK,MAVLc,UAUK,I,kBATHX,mBAAA,CAQKY,SAAA,QAAAC,WAAA,CARcT,MAAA,CAAAU,KAAK,EAAbC,IAAI;yBAAff,mBAAA,CAQK;MARsBgB,GAAG,EAAED,IAAI,CAACjB,EAAE;MAAEA,EAAE,EAAC;QAC1CD,mBAAA,CAMK,aALHoB,UAAyB,EACzBpB,mBAAA,CAA8B,eAAAqB,gBAAA,CAApBH,IAAI,CAACR,IAAI,kBACnBY,UAAqB,EACrBC,UAAkC,EAClCC,UAAsC,C;oCAK5CC,WAAkB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}