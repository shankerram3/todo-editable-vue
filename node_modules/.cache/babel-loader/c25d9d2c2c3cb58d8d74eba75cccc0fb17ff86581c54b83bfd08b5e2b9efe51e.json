{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"TODO LIST\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Add Item\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Todo\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"edit\"\n}, \"Edit\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"delete\"\n}, \"Delete\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createStaticVNode(\"<h3>Completed</h3><ul id=\\\"completed-tasks\\\"><li><input type=\\\"checkbox\\\" checked><label>See the Doctor</label><input type=\\\"text\\\"><button class=\\\"edit\\\">Edit</button><button class=\\\"delete\\\">Delete</button></li></ul>\", 2);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"body\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTask = $event),\n    id: \"new-task\",\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newTask]]), _createTextVNode(_toDisplayString($setup.newTask.text), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.addNote\n  }, \"Add\")]), _hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tasks, task => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: task.id,\n      id: \"incomplete-tasks\"\n    }, [_createElementVNode(\"li\", null, [_hoisted_5, _createElementVNode(\"label\", null, _toDisplayString(task.text), 1 /* TEXT */), _hoisted_6, _hoisted_7, _hoisted_8])]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_9])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$setup","newTask","$event","id","text","onClick","addNote","_hoisted_4","_Fragment","_renderList","tasks","task","key","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9"],"sources":["/Users/ram/projects/todo-assignment/notes-app/src/App.vue"],"sourcesContent":["\n<script setup>\nimport {ref} from \"vue\"\n\nconst newTask = ref(\"\")\nconst tasks =ref([])\n\nconst addNote =()=> {\n  tasks.value.push({\n    text:newTask.value,\n  })\n}\n</script>\n\n\n<template>\n  <body>\n    <div class=\"container\">\n      <h2>TODO LIST</h2>\n      <h3>Add Item</h3>\n      <p><input v-model=\"newTask\" id=\"new-task\" type=\"text\" />{{ newTask.text }}<button @click=\"addNote\">Add</button></p>\n\n      <h3>Todo</h3>\n      <ul v-for=\"task in tasks\"   :key=\"task.id\" id=\"incomplete-tasks\">\n        <li>\n          <input type=\"checkbox\" /><label>{{ task.text }}</label\n          ><input type=\"text\" /><button class=\"edit\">Edit</button\n          ><button class=\"delete\">Delete</button>\n        </li>\n      </ul>\n\n      <h3>Completed</h3>\n      <ul id=\"completed-tasks\">\n        <li>\n          <input type=\"checkbox\" checked /><label>See the Doctor</label\n          ><input type=\"text\" /><button class=\"edit\">Edit</button\n          ><button class=\"delete\">Delete</button>\n        </li>\n      </ul>\n    </div>\n  </body>\n</template>\n<style >\nbody {\n\tbackground: #fff;\n  height: 100vh;\n  margin: 0;\n\tcolor: #333;\n\tfont-family: Lato, sans-serif;\n\tbackground-color:#e4e4e4;\n}\n\n.container {\n\tdisplay: block;\n\twidth: 400px;\n\tmargin: 100px auto auto auto ;\n\tbackground-color:#fff;\n\tpadding:0px 10px 10px 10px;\n\tborder-radius:10px\n}\n\nh2 {\n\ttext-align:center;\n\tpadding-top:10px;\n\tmargin-bottom:0px;\n}\n\nul {\n\tmargin: 0;\n\tpadding: 0;\n}\n\nli * {\n\tfloat: left;\n}\n\nli,\nh3 {\n\tclear: both;\n\tlist-style: none;\n}\n\ninput,\nbutton {\n\toutline: none;\n}\n\nbutton {\n\tbackground: none;\n\tborder: 0px;\n\tcolor: #888;\n\tfont-size: 15px;\n\twidth: 60px;\n\tmargin: 10px 0 0;\n\tfont-family: Lato, sans-serif;\n\tcursor: pointer;\n}\n\nbutton:hover {\n\tcolor: #333;\n}\n\n\n/* Heading */\n\nh3,\nlabel[for='new-task'] {\n\tcolor: #333;\n\tfont-weight: 700;\n\tfont-size: 15px;\n\tborder-bottom: 2px solid #333;\n\tpadding: 20px 0 10px;\n\tmargin: 0;\n\ttext-transform: uppercase;\n}\n\ninput[type=\"text\"] {\n\tmargin: 0;\n\tfont-size: 18px;\n\tline-height: 18px;\n\theight: 18px;\n\tpadding: 10px;\n\tborder: 1px solid #ddd;\n\tbackground: #fff;\n\tborder-radius: 6px;\n\tfont-family: Lato, sans-serif;\n\tcolor: #888;\n}\n\ninput[type=\"text\"]:focus {\n\tcolor: #333;\n}\n\n\n/* New Task */\n\nlabel[for='new-task'] {\n\tdisplay: block;\n\tmargin: 0 0 20px;\n}\n\ninput#new-task {\n\tfloat: left;\n\twidth: 318px;\n}\n\np > button:hover {\n\tcolor: #0FC57C;\n}\n\n\n/* Task list */\n\nli {\n\toverflow: hidden;\n\tpadding: 20px 0;\n\tborder-bottom: 1px solid #eee;\n}\n\nli > input[type=\"checkbox\"] {\n\tmargin: 0 10px;\n\tposition: relative;\n\ttop: 15px;\n}\n\nli > label {\n\tfont-size: 18px;\n\tline-height: 40px;\n\twidth: 237px;\n\tpadding: 0 0 0 11px;\n}\n\nli > input[type=\"text\"] {\n\twidth: 226px;\n}\n\nli > .delete:hover {\n\tcolor: #CF2323;\n}\n\n\n/* Completed */\n\n#completed-tasks label {\n\ttext-decoration: line-through;\n\tcolor: #888;\n}\n\n\n/* Edit Task */\n\nul li input[type=text] {\n\tdisplay: none;\n}\n\nul li.editMode input[type=text] {\n\tdisplay: block;\n}\n\nul li.editMode label {\n\tdisplay: none;\n}\n</style>"],"mappings":";;EAiBSA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAkB,YAAd,WAAS;gCACbA,mBAAA,CAAiB,YAAb,UAAQ;gCAGZA,mBAAA,CAAa,YAAT,MAAI;gCAGJA,mBAAA,CAAyB;EAAlBC,IAAI,EAAC;AAAU;gCACrBD,mBAAA,CAAqB;EAAdC,IAAI,EAAC;AAAM;gCAAGD,mBAAA,CACrB;EAD6BD,KAAK,EAAC;AAAM,GAAC,MAAI;gCAC9CC,mBAAA,CAAsC;EAA9BD,KAAK,EAAC;AAAQ,GAAC,QAAM;;;uBAXtCG,mBAAA,CAwBO,eAvBLF,mBAAA,CAsBM,OAtBNG,UAsBM,GArBJC,UAAkB,EAClBC,UAAiB,EACjBL,mBAAA,CAAmH,Y,gBAAhHA,mBAAA,CAAqD;+DAArCM,MAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,EAAE,EAAC,UAAU;IAACR,IAAI,EAAC;iDAA5BK,MAAA,CAAAC,OAAO,E,qCAAiCD,MAAA,CAAAC,OAAO,CAACG,IAAI,kBAAGV,mBAAA,CAAqC;IAA5BW,OAAK,EAAEL,MAAA,CAAAM;EAAO,GAAE,KAAG,E,GAEtGC,UAAa,G,kBACbX,mBAAA,CAMKY,SAAA,QAAAC,WAAA,CANcT,MAAA,CAAAU,KAAK,EAAbC,IAAI;yBAAff,mBAAA,CAMK;MANwBgB,GAAG,EAAED,IAAI,CAACR,EAAE;MAAEA,EAAE,EAAC;QAC5CT,mBAAA,CAIK,aAHHmB,UAAyB,EAAAnB,mBAAA,CACxB,eAAAoB,gBAAA,CADkCH,IAAI,CAACP,IAAI,kBAC3CW,UAAqB,EAAAC,UACrB,EAAAC,UAAsC,C;kCAI3CC,UAAkB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}