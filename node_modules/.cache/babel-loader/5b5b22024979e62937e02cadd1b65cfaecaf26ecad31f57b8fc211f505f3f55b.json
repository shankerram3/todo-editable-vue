{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"TODO LIST\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Add Item\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Todo\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  id: \"incomplete-tasks\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"delete\"\n}, \"Delete\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_createStaticVNode(\"<h3 data-v-7ba5bd90>Completed</h3><ul id=\\\"completed-tasks\\\" data-v-7ba5bd90><li data-v-7ba5bd90><input type=\\\"checkbox\\\" checked data-v-7ba5bd90><label data-v-7ba5bd90>See the Doctor</label><input type=\\\"text\\\" data-v-7ba5bd90><button class=\\\"edit\\\" data-v-7ba5bd90>Edit</button><button class=\\\"delete\\\" data-v-7ba5bd90>Delete</button></li></ul>\", 2);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTask = $event),\n    id: \"new-task\",\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newTask]]), _createElementVNode(\"button\", {\n    onClick: $setup.addTask\n  }, \" Add \")]), _hoisted_4, _createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, [_hoisted_6, $setup.editable != false ? (_openBlock(), _createElementBlock(\"label\", _hoisted_7, _toDisplayString(task.task), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.editable ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 1,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newTask = $event),\n      type: \"text\"\n    }, null, 512 /* NEED_PATCH */)), [[_vModelText, $setup.newTask]]) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n      onClick: _cache[2] || (_cache[2] = $event => $setup.editable = true),\n      class: \"edit\"\n    }, \" Edit\"), _hoisted_8]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_9])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$setup","newTask","$event","onClick","addTask","_hoisted_4","_hoisted_5","_Fragment","_renderList","tasks","task","key","_hoisted_6","editable","_hoisted_7","_toDisplayString","_cache","_hoisted_8","_hoisted_9"],"sources":["/Users/ram/projects/todo-assignment/notes-app/src/App.vue"],"sourcesContent":["<script setup>\nimport { ref } from \"vue\";\nconst newTask = ref(\"\");\nconst tasks = ref([]);\nconst editable = ref(false);\nconst addTask = () => {\n  console.log(tasks);\n  tasks.value.push({\n    task: newTask.value,\n  });\n  newTask.value = \"\";\n};\n</script>\n<template>\n  <main>\n    <div class=\"container\">\n      <h2>TODO LIST</h2>\n      <h3>Add Item</h3>\n      <p>\n        <input v-model=\"newTask\" id=\"new-task\" type=\"text\" /><button @click=\"addTask\">\n          Add\n        </button>\n      </p>\n\n      <h3>Todo</h3>\n      <ul id=\"incomplete-tasks\">\n        <li v-for=\"task in tasks\" :key=\"task.id\">\n          <input type=\"checkbox\" /><label v-if=\"editable != false\">{{\n            task.task\n          }}</label><input v-if=\"editable\" v-model=\"newTask\" type=\"text\" /><button @click=\"editable = true\"\n            class=\"edit\">\n            Edit</button><button class=\"delete\">Delete</button>\n        </li>\n      </ul>\n\n      <h3>Completed</h3>\n      <ul id=\"completed-tasks\">\n        <li>\n          <input type=\"checkbox\" checked /><label>See the Doctor</label><input type=\"text\" /><button\n            class=\"edit\">Edit</button><button class=\"delete\">Delete</button>\n        </li>\n      </ul>\n    </div>\n  </main>\n</template>\n<style scoped>\n/* Basic Style */\n\nmain {\n  background: #fff;\n  color: #333;\n  font-family: Lato, sans-serif;\n  background-color: #e4e4e4;\n}\n\n.container {\n  display: block;\n  width: 400px;\n  margin: 10px auto 100px;\n  background-color: #fff;\n  padding: 0px 10px 10px 10px;\n  border-radius: 10px;\n}\n\nh2 {\n  text-align: center;\n  padding-top: 10px;\n  margin-bottom: 0px;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n}\n\nli * {\n  float: left;\n}\n\nli,\nh3 {\n  clear: both;\n  list-style: none;\n}\n\ninput,\nbutton {\n  outline: none;\n}\n\nbutton {\n  background: none;\n  border: 0px;\n  color: #888;\n  font-size: 15px;\n  width: 60px;\n  margin: 10px 0 0;\n  font-family: Lato, sans-serif;\n  cursor: pointer;\n}\n\nbutton:hover {\n  color: #333;\n}\n\n/* Heading */\n\nh3,\nlabel[for=\"new-task\"] {\n  color: #333;\n  font-weight: 700;\n  font-size: 15px;\n  border-bottom: 2px solid #333;\n  padding: 20px 0 10px;\n  margin: 0;\n  text-transform: uppercase;\n}\n\ninput[type=\"text\"] {\n  margin: 0;\n  font-size: 18px;\n  line-height: 18px;\n  height: 18px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  background: #fff;\n  border-radius: 6px;\n  font-family: Lato, sans-serif;\n  color: #888;\n}\n\ninput[type=\"text\"]:focus {\n  color: #333;\n}\n\n/* New Task */\n\nlabel[for=\"new-task\"] {\n  display: block;\n  margin: 0 0 20px;\n}\n\ninput#new-task {\n  float: left;\n  width: 318px;\n}\n\np>button:hover {\n  color: #0fc57c;\n}\n\n/* Task list */\n\nli {\n  overflow: hidden;\n  padding: 20px 0;\n  border-bottom: 1px solid #eee;\n}\n\nli>input[type=\"checkbox\"] {\n  margin: 0 10px;\n  position: relative;\n  top: 15px;\n}\n\nli>label {\n  font-size: 18px;\n  line-height: 40px;\n  width: 237px;\n  padding: 0 0 0 11px;\n}\n\nli>input[type=\"text\"] {\n  width: 226px;\n}\n\nli>.delete:hover {\n  color: #cf2323;\n}\n\n/* Completed */\n\n#completed-tasks label {\n  text-decoration: line-through;\n  color: #888;\n}\n\n/* Edit Task */\n\nul li input[type=\"text\"] {\n  display: none;\n}\n\nul li.editMode input[type=\"text\"] {\n  display: block;\n}\n\nul li.editMode label {\n  display: none;\n}\n</style>"],"mappings":";;;EAeSA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAAkB,YAAd,WAAS;gEACbA,mBAAA,CAAiB,YAAb,UAAQ;gEAOZA,mBAAA,CAAa,YAAT,MAAI;;EACJC,EAAE,EAAC;AAAkB;gEAErBD,mBAAA,CAAyB;EAAlBE,IAAI,EAAC;AAAU;;;;gEAIPF,mBAAA,CAAsC;EAA9BD,KAAK,EAAC;AAAQ,GAAC,QAAM;;;uBAjBpDI,mBAAA,CA6BO,eA5BLH,mBAAA,CA2BM,OA3BNI,UA2BM,GA1BJC,UAAkB,EAClBC,UAAiB,EACjBN,mBAAA,CAII,Y,gBAHFA,mBAAA,CAAqD;+DAArCO,MAAA,CAAAC,OAAO,GAAAC,MAAA;IAAER,EAAE,EAAC,UAAU;IAACC,IAAI,EAAC;iDAA5BK,MAAA,CAAAC,OAAO,E,GAA8BR,mBAAA,CAE5C;IAFqDU,OAAK,EAAEH,MAAA,CAAAI;EAAO,GAAE,OAE9E,E,GAGFC,UAAa,EACbZ,mBAAA,CAQK,MARLa,UAQK,I,kBAPHV,mBAAA,CAMKW,SAAA,QAAAC,WAAA,CANcR,MAAA,CAAAS,KAAK,EAAbC,IAAI;yBAAfd,mBAAA,CAMK;MANsBe,GAAG,EAAED,IAAI,CAAChB;QACnCkB,UAAyB,EAAaZ,MAAA,CAAAa,QAAQ,a,cAArBjB,mBAAA,CAEf,SAAAkB,UAAA,EAAAC,gBAAA,CADRL,IAAI,CAACA,IAAI,oB,mCACYV,MAAA,CAAAa,QAAQ,G,+BAArBjB,mBAAA,CAAuD;;iEAAvBI,MAAA,CAAAC,OAAO,GAAAC,MAAA;MAAEP,IAAI,EAAC;oDAAdK,MAAA,CAAAC,OAAO,E,uCAAgBR,mBAAA,CAElD;MAF2DU,OAAK,EAAAa,MAAA,QAAAA,MAAA,MAAAd,MAAA,IAAEF,MAAA,CAAAa,QAAQ;MACvFrB,KAAK,EAAC;OAAO,OACT,GAASyB,UAAsC,C;oCAIzDC,UAAkB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}