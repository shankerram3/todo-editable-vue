{"ast":null,"code":"import { createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, vModelText as _vModelText, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"overlay\"\n};\nconst _hoisted_2 = {\n  class: \"modal\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"textarea\", {\n  name: \"edited-note\",\n  id: \"note\",\n  cols: \"20\",\n  rows: \"10\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Add Note\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"container\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"TODO LIST\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Add Item\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Todo\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  id: \"incomplete-tasks\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = /*#__PURE__*/_createStaticVNode(\"<h3>Completed</h3><ul id=\\\"completed-tasks\\\"><li><input type=\\\"checkbox\\\" checked><label>See the Doctor</label><input type=\\\"text\\\"><button class=\\\"edit\\\">Edit</button><button class=\\\"delete\\\">Delete</button></li></ul>\", 2);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"body\", null, [_withDirectives(_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createElementVNode(\"button\", {\n    class: \"close\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.showModal = false)\n  }, \"Close\")])], 512 /* NEED_PATCH */), [[_vShow, $setup.showModal]]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _hoisted_7, _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newTask = $event),\n    id: \"new-task\",\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newTask]]), _createTextVNode(_toDisplayString($setup.newTask.text), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.addNote\n  }, \"Add\")]), _hoisted_8, _createElementVNode(\"ul\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: index,\n      id: \"incomplete-tasks\"\n    }, [_createElementVNode(\"li\", null, [_hoisted_10, $setup.editable != true ? (_openBlock(), _createElementBlock(\"label\", _hoisted_11, _toDisplayString(task.text), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, [$setup.editable ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 0,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newTask = $event),\n      id: \"new-task\",\n      type: \"text\"\n    }, null, 512 /* NEED_PATCH */)), [[_vModelText, $setup.newTask]]) : _createCommentVNode(\"v-if\", true), _createTextVNode(_toDisplayString($setup.newTask.text), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n      onClick: _cache[3] || (_cache[3] = $event => $setup.editTask()),\n      class: \"edit\"\n    }, \"Edit\"), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteTask(index),\n      class: \"delete\"\n    }, \"Delete\", 8 /* PROPS */, _hoisted_12)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_13])]);\n}","map":{"version":3,"names":["class","_createElementVNode","name","id","cols","rows","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","$event","$setup","showModal","_hoisted_5","_hoisted_6","_hoisted_7","newTask","text","addNote","_hoisted_8","_hoisted_9","_Fragment","_renderList","tasks","task","index","key","_hoisted_10","editable","_hoisted_11","_toDisplayString","editTask","deleteTask","_hoisted_12","_hoisted_13"],"sources":["/Users/ram/projects/todo-assignment/notes-app/src/App.vue"],"sourcesContent":["\n<script setup>\nimport { ref } from \"vue\";\n\nconst newTask = ref(\"\");\nconst tasks = ref([]);\nconst editable = ref(false);\nconst showModal = ref(false);\n\nconst addNote = () => {\n  tasks.value.push({\n    text: newTask.value,\n  });\n  newTask.value = \"\";\n};\n\nfunction deleteTask(index) {\n  tasks.value.splice(index, 1);\n}\nfunction editTask() {\n  showModal.value= true\n}\n</script>\n\n\n<template>\n  <body>\n    <div v-show=\"showModal\" class=\"overlay\">\n      <div class=\"modal\">\n        <textarea name=\"edited-note\" id=\"note\" cols=\"20\" rows=\"10\"></textarea>\n        <button>Add Note</button>\n        <button class=\"close\" @click=\"showModal = false\">Close</button>\n      </div>\n    </div>\n    <div class=\"container\">\n      <h2>TODO LIST</h2>\n      <h3>Add Item</h3>\n      <p>\n        <input v-model=\"newTask\" id=\"new-task\" type=\"text\" />{{ newTask.text\n        }}<button @click=\"addNote\">Add</button>\n      </p>\n\n      <h3>Todo</h3>\n      <ul id=\"incomplete-tasks\">\n        <ul v-for=\"(task, index) in tasks\" :key=\"index\" id=\"incomplete-tasks\">\n          <li>\n            <input type=\"checkbox\" />\n            <label v-if=\"editable != true\">{{ task.text }}</label>\n            <p>\n              <input\n                v-if=\"editable\"\n                v-model=\"newTask\"\n                id=\"new-task\"\n                type=\"text\"\n              />{{ newTask.text }}\n            </p>\n            <button @click=\"editTask()\" class=\"edit\">Edit</button>\n            <button @click=\"deleteTask(index)\" class=\"delete\">Delete</button>\n          </li>\n        </ul>\n      </ul>\n\n      <h3>Completed</h3>\n      <ul id=\"completed-tasks\">\n        <li>\n          <input type=\"checkbox\" checked /><label>See the Doctor</label\n          ><input type=\"text\" /><button class=\"edit\">Edit</button\n          ><button class=\"delete\">Delete</button>\n        </li>\n      </ul>\n    </div>\n  </body>\n</template>\n<style >\nbody {\n  background: #fff;\n  height: 100vh;\n  margin: 0;\n  color: #333;\n  font-family: Lato, sans-serif;\n  background-color: #e4e4e4;\n}\n\n.container {\n  display: block;\n  width: 400px;\n  margin: 100px auto auto auto;\n  background-color: #fff;\n  padding: 0px 10px 10px 10px;\n  border-radius: 10px;\n}\n\nh2 {\n  text-align: center;\n  padding-top: 10px;\n  margin-bottom: 0px;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n}\n\nli * {\n  float: left;\n}\n\nli,\nh3 {\n  clear: both;\n  list-style: none;\n}\n\ninput,\nbutton {\n  outline: none;\n}\n\nbutton {\n  background: none;\n  border: 0px;\n  color: #888;\n  font-size: 15px;\n  width: 60px;\n  margin: 10px 0 0;\n  font-family: Lato, sans-serif;\n  cursor: pointer;\n}\n\nbutton:hover {\n  color: #333;\n}\n\n/* Heading */\n\nh3,\nlabel[for=\"new-task\"] {\n  color: #333;\n  font-weight: 700;\n  font-size: 15px;\n  border-bottom: 2px solid #333;\n  padding: 20px 0 10px;\n  margin: 0;\n  text-transform: uppercase;\n}\n\ninput[type=\"text\"] {\n  margin: 0;\n  font-size: 18px;\n  line-height: 18px;\n  height: 18px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  background: #fff;\n  border-radius: 6px;\n  font-family: Lato, sans-serif;\n  color: #888;\n}\n\ninput[type=\"text\"]:focus {\n  color: #333;\n}\n\n/* New Task */\n\nlabel[for=\"new-task\"] {\n  display: block;\n  margin: 0 0 20px;\n}\n\ninput#new-task {\n  float: left;\n  width: 318px;\n}\n\np > button:hover {\n  color: #0fc57c;\n}\n\n/* Task list */\n\nli {\n  overflow: hidden;\n  padding: 20px 0;\n  border-bottom: 1px solid #eee;\n}\n\nli > input[type=\"checkbox\"] {\n  margin: 0 10px;\n  position: relative;\n  top: 15px;\n}\n\nli > label {\n  font-size: 18px;\n  line-height: 40px;\n  width: 237px;\n  padding: 0 0 0 11px;\n}\n\nli > input[type=\"text\"] {\n  width: 226px;\n}\n\nli > .delete:hover {\n  color: #cf2323;\n}\n\n/* Completed */\n\n#completed-tasks label {\n  text-decoration: line-through;\n  color: #888;\n}\n\n/* Edit Task */\n\nul li input[type=\"text\"] {\n  display: none;\n}\n\nul li.editMode input[type=\"text\"] {\n  display: block;\n}\n\nul li.editMode label {\n  display: none;\n}\n.modal {\n    width: 750px;\n    background-color: white;\n    border-radius: 10px;\n    padding: 30px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n  }\n  .modal button {\n    padding: 10px 20px;\n    font-size: 20px;\n    width: 100%;\n    background-color: blueviolet;\n    border: none;\n    color: white;\n    cursor: pointer;\n    margin-top: 15px;\n  }\n  .modal p {\n    margin-left: auto;\n    font-size: 20px;\n    z-index: 100000;\n    cursor: pointer;\n  }\n  textarea {\n    width: 100%;\n    height: 200px;\n    padding: 5px;\n    font-size: 20px;\n  }\n  .overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.77);\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 10;\n  }\n</style>"],"mappings":";;EA2B4BA,KAAK,EAAC;AAAS;;EAChCA,KAAK,EAAC;AAAO;gCAChBC,mBAAA,CAAsE;EAA5DC,IAAI,EAAC,aAAa;EAACC,EAAE,EAAC,MAAM;EAACC,IAAI,EAAC,IAAI;EAACC,IAAI,EAAC;;gCACtDJ,mBAAA,CAAyB,gBAAjB,UAAQ;;EAIfD,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAkB,YAAd,WAAS;gCACbA,mBAAA,CAAiB,YAAb,UAAQ;gCAMZA,mBAAA,CAAa,YAAT,MAAI;;EACJE,EAAE,EAAC;AAAkB;iCAGnBF,mBAAA,CAAyB;EAAlBK,IAAI,EAAC;AAAU;;;;;;;uBApBhCC,mBAAA,CA6CO,e,gBA5CLN,mBAAA,CAMM,OANNO,UAMM,GALJP,mBAAA,CAIM,OAJNQ,UAIM,GAHJC,UAAsE,EACtEC,UAAyB,EACzBV,mBAAA,CAA+D;IAAvDD,KAAK,EAAC,OAAO;IAAEY,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,SAAS;KAAU,OAAK,E,qCAJ7CD,MAAA,CAAAC,SAAS,E,GAOtBf,mBAAA,CAoCM,OApCNgB,UAoCM,GAnCJC,UAAkB,EAClBC,UAAiB,EACjBlB,mBAAA,CAGI,Y,gBAFFA,mBAAA,CAAqD;+DAArCc,MAAA,CAAAK,OAAO,GAAAN,MAAA;IAAEX,EAAE,EAAC,UAAU;IAACG,IAAI,EAAC;iDAA5BS,MAAA,CAAAK,OAAO,E,qCAAiCL,MAAA,CAAAK,OAAO,CAACC,IAAI,kBAClEpB,mBAAA,CAAqC;IAA5BW,OAAK,EAAEG,MAAA,CAAAO;EAAO,GAAE,KAAG,E,GAGhCC,UAAa,EACbtB,mBAAA,CAiBK,MAjBLuB,UAiBK,I,kBAhBHjB,mBAAA,CAeKkB,SAAA,QAAAC,WAAA,CAfuBX,MAAA,CAAAY,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAAvBtB,mBAAA,CAeK;MAf+BuB,GAAG,EAAED,KAAK;MAAE1B,EAAE,EAAC;QACjDF,mBAAA,CAaK,aAZH8B,WAAyB,EACZhB,MAAA,CAAAiB,QAAQ,Y,cAArBzB,mBAAA,CAAsD,SAAA0B,WAAA,EAAAC,gBAAA,CAApBN,IAAI,CAACP,IAAI,oB,mCAC3CpB,mBAAA,CAOI,YALMc,MAAA,CAAAiB,QAAQ,G,+BADhBzB,mBAAA,CAKE;;iEAHSQ,MAAA,CAAAK,OAAO,GAAAN,MAAA;MAChBX,EAAE,EAAC,UAAU;MACbG,IAAI,EAAC;oDAFIS,MAAA,CAAAK,OAAO,E,yEAGbL,MAAA,CAAAK,OAAO,CAACC,IAAI,iB,GAEnBpB,mBAAA,CAAsD;MAA7CW,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAoB,QAAQ;MAAInC,KAAK,EAAC;OAAO,MAAI,GAC7CC,mBAAA,CAAiE;MAAxDW,OAAK,EAAAE,MAAA,IAAEC,MAAA,CAAAqB,UAAU,CAACP,KAAK;MAAG7B,KAAK,EAAC;OAAS,QAAM,iBAAAqC,WAAA,E;oCAK9DC,WAAkB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}